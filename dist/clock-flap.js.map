{"version":3,"file":"clock-flap.js","sourceRoot":"","sources":["../src/clock-flap.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {consume} from '@lit/context';\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport {TimeStruct, timeContext} from './timeContext';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('clock-flap')\nexport class ClockFlap extends LitElement {\n  @state()\n  flipperClass = 'flipper';\n\n  @state()\n  currentValue = 0;\n\n  @state()\n  newValue = 1;\n\n  @state()\n  flipperValue = this.currentValue;\n\n  @consume({context: timeContext, subscribe: true})\n  @property({attribute: false})\n  time?: TimeStruct;\n\n  @property()\n  type: 'hour' | 'minute' | 'second' = 'hour';\n\n  @property()\n  timePosition: '1' | '2' = '2';\n\n  private tick = 0;\n\n  static override styles = css`\n    .number {\n      position: relative;\n      border-right: 1px solid rgba(0, 0, 0, 0.5);\n    }\n\n    .number .top,\n    .number .bottom,\n    .number .flipper {\n      background: #444;\n      height: 27px;\n      display: block;\n      width: 40px;\n      overflow: hidden;\n      position: relative;\n    }\n\n    .number .flipper {\n      position: absolute;\n      perspective: 800;\n      top: 0;\n    }\n\n    .number .flipper.flipped {\n      transform: rotateX(180deg) translateY(-1px);\n      transform-origin: bottom center;\n      transition: transform 0.5s;\n    }\n\n    .number .top {\n      margin-bottom: 1px;\n    }\n\n    .number .digit {\n      color: white;\n      position: absolute;\n      font-size: 46px;\n      width: 100%;\n      height: 100%;\n      text-align: center;\n    }\n\n    .number .flipper .digit {\n      background: #444;\n    }\n\n    .number .flipper {\n      transform: rotateX(0deg);\n    }\n\n    .number .flipper.flipped .digit {\n      transform: translateY(32px) rotateX(180deg);\n    }\n\n    .number .top .digit {\n      top: 0px;\n    }\n\n    .number .bottom .digit {\n      top: -32px;\n    }\n  `;\n\n  override render() {\n    return html` <div class=\"number\">\n      <div class=\"top\">\n        <div class=\"digit\">${this.newValue}</div>\n      </div>\n      <div class=\"bottom\">\n        <div class=\"digit\">${this.currentValue}</div>\n      </div>\n      <div class=\"${this.flipperClass}\">\n        <div class=\"digit front\">${this.flipperValue}</div>\n      </div>\n    </div>`;\n  }\n\n  flip(): void {\n    this.flipperClass = 'flipper flipped';\n    setTimeout(() => {\n      this.flipperValue = this.newValue;\n    }, 250);\n    setTimeout(() => {\n      this.currentValue = this.newValue;\n      this.flipperClass = 'flipper';\n    }, 500);\n  }\n\n  setTime() {\n    if (this.time) {\n      switch (this.type) {\n        case 'hour':\n          // eslint-disable-next-line no-case-declarations\n          let hour = this.time.hour > 12 ? this.time.hour - 12 : this.time.hour;\n          hour = hour === 0 ? 12 : hour;\n          if (this.timePosition === '1') {\n            if (this.time.minute === 59 && this.time.second === 59) {\n              this.newValue = hour < 9 || hour === 12 ? 0 : 1;\n              this.flip();\n            } else {\n              this.currentValue = Math.floor(hour / 10);\n            }\n          } else {\n            const calculatedValue = hour < 10 ? hour : hour % 10;\n            if (this.time.minute === 59 && this.time.second === 59) {\n              if (hour === 12) {\n                this.newValue = 1;\n                this.flip();\n              } else if (calculatedValue < 9) {\n                this.newValue = calculatedValue + 1;\n                this.flip();\n              } else if (calculatedValue === 9) {\n                this.newValue = 0;\n                this.flip();\n              }\n            } else {\n              this.currentValue = calculatedValue;\n            }\n          }\n          break;\n        case 'second':\n        case 'minute':\n          // eslint-disable-next-line no-case-declarations\n          const value =\n            this.type === 'minute' ? this.time.minute : this.time.second;\n          if (!this.currentValue) {\n            if (this.timePosition === '1') {\n              this.currentValue = Math.floor(value / 10);\n            } else {\n              this.currentValue = value % 10;\n            }\n          }\n          break;\n      }\n      switch (this.type) {\n        case 'minute':\n          if (this.time.second === 59) {\n            if (this.timePosition === '1') {\n              const calculatedValue =\n                this.time.minute !== 59 ? Math.floor(this.time.minute / 10) : 0;\n              if (calculatedValue !== this.currentValue) {\n                this.newValue = calculatedValue;\n                this.flip();\n              }\n            } else {\n              this.newValue =\n                this.time.minute !== 59 ? this.currentValue + 1 : 0;\n              this.flip();\n            }\n          }\n          break;\n        case 'second':\n          if (this.timePosition === '1') {\n            this.newValue =\n              this.time.second !== 59\n                ? Math.floor((this.time.second + 1) / 10)\n                : 0;\n            if (this.newValue !== this.currentValue) {\n              this.flip();\n            }\n          } else {\n            this.flip();\n            this.newValue =\n              this.time.second !== 59 ? (this.currentValue + 1) % 10 : 0;\n          }\n          break;\n      }\n      this.flipperValue = this.currentValue;\n    }\n  }\n\n  override requestUpdate(name?: PropertyKey | undefined): void {\n    super.requestUpdate();\n    if (name === 'time') {\n      this.setTime();\n    }\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.setTime();\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    clearInterval(this.tick);\n  }\n}\n"]}